# Checks for each PR / push

name: QC checks

on:
  push:
    branches-ignore:
      - l10*

  pull_request:
    branches-ignore:
      - l10*

env:
  python_version: 3.9
  node_version: 16
  runner_ref: ubuntu-20.04

  server_start_sleep: 60

  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  INVENTREE_DB_ENGINE: sqlite3
  INVENTREE_DB_NAME: inventree
  INVENTREE_MEDIA_ROOT: ../test_inventree_media
  INVENTREE_STATIC_ROOT: ../test_inventree_static
  INVENTREE_ADMIN_USER: testuser
  INVENTREE_ADMIN_PASSWORD: testpassword
  INVENTREE_ADMIN_EMAIL: test@test.com

jobs:
  pep_style:
    name: Python Style (PEP8)
    runs-on: ${{ env.runner_ref }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python ${{ env.python_version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python_version }}
          cache: 'pip'
      - name: Install Dependencies
        run: |
          pip3 install invoke
          invoke install
      - name: flake8
        run: |
          flake8 InvenTree

  javascript:
    name: JS Template Files
    needs: pep_style
    runs-on: ${{ env.runner_ref }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install node.js ${{ env.node_version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node_version }}
          cache: 'npm'
      - run: npm install
      - name: Set up Python ${{ env.python_version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python_version }}
          cache: 'pip'
      - name: Install OS Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install gettext
      - name: Install Python Dependencies
        run: |
          pip3 install invoke
          invoke update
      - name: Check Templated Files
        run: |
          cd ci
          python3 check_js_templates.py
      - name: Lint Javascript Files
        run: |
          invoke render-js-files
          npx eslint js_tmp/*.js

  html:
    name: HTML Template Files
    needs: pep_style
    runs-on: ${{ env.runner_ref }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install node.js ${{ env.node_version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node_version }}
          cache: 'npm'
      - run: npm install
      - name: Set up Python ${{ env.python_version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python_version }}
          cache: 'pip'
      - name: Install OS Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install gettext
      - name: Install Python Dependencies
        run: |
          pip3 install invoke
          invoke update
      - name: Check HTML Files
        run: |
          npx markuplint **/templates/*.html

  pre-commit:
    name: pre-commit
    needs: pep_style
    runs-on: ${{ env.runner_ref }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ env.python_version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.python_version }}
        cache: 'pip'
    - uses: pre-commit/action@v2.0.3

  python:
    name: Test inventree-python
    needs: pre-commit
    runs-on: ${{ env.runner_ref }}

    env:
      wrapper_name: inventree-python
      INVENTREE_DB_ENGINE: django.db.backends.sqlite3
      INVENTREE_DB_NAME: ../inventree_unit_test_db.sqlite3
      INVENTREE_PYTHON_TEST_SERVER: http://localhost:12345
      INVENTREE_PYTHON_TEST_USERNAME: testuser
      INVENTREE_PYTHON_TEST_PASSWORD: testpassword

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python ${{ env.python_version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python_version }}
          cache: 'pip'
      - name: Install InvenTree
        run: |
          pip3 install invoke
          invoke update
      - name: Download Python Code
        run: |
          git clone --depth 1 https://github.com/inventree/${{ env.wrapper_name }} ./${{ env.wrapper_name }}
      - name: Start Server
        run: |
          invoke delete-data -f
          invoke import-fixtures
          invoke server -a 127.0.0.1:12345 &
          invoke wait
      - name: Run Tests
        run: |
          cd ${{ env.wrapper_name }}
          invoke check-server
          coverage run -m unittest discover -s test/

  coverage:
    name: Tests + Coverage [SQLite]
    needs: ['javascript', 'html', 'pre-commit']
    runs-on: ${{ env.runner_ref }}

    env:
      INVENTREE_DB_NAME: ./inventree.sqlite
      INVENTREE_DB_ENGINE: sqlite3
      INVENTREE_PLUGINS_ENABLED: true

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python ${{ env.python_version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python_version }}
          cache: 'pip'
      - name: Install OS Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install gettext
      - name: Install Python Dependencies
        run: |
          python3 -m pip3 install -U pip3
          pip3 install invoke
          invoke update
      - name: Coverage Tests
        run: |
          invoke coverage
      - name: Data Import Export
        run: |
          invoke migrate
          invoke import-fixtures
          invoke export-records -f data.json
          rm inventree.sqlite
          invoke migrate
          invoke import-records -f data.json
          invoke import-records -f data.json
      - name: Test Translations
        run: invoke translate
      - name: Check Migration Files
        run: python3 ci/check_migration_files.py
      - name: Upload Coverage Report
        run: coveralls

  postgres:
    name: Tests [PostgreSQL]
    needs: ['javascript', 'html', 'pre-commit']
    runs-on: ${{ env.runner_ref }}
    if: github.event_name == 'push'

    env:
      INVENTREE_DB_ENGINE: django.db.backends.postgresql
      INVENTREE_DB_USER: inventree
      INVENTREE_DB_PASSWORD: password
      INVENTREE_DB_HOST: '127.0.0.1'
      INVENTREE_DB_PORT: 5432
      INVENTREE_DEBUG: info
      INVENTREE_CACHE_HOST: localhost
      INVENTREE_PLUGINS_ENABLED: true

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: inventree
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432

      redis:
        image: redis
        ports:
          - 6379:6379

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python ${{ env.python_version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python_version }}
          cache: 'pip'
      - name: Install OS Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install gettext

          sudo apt-get install libpq-dev
      - name: Install Specific Python Dependencies
        run: |
          pip3 install psycopg2
          pip3 install django-redis>=5.0.0
      - name: Install Python Dependencies
        run: |
          python3 -m pip3 install -U pip3
          pip3 install invoke
          invoke update
      - name: Run Tests
        run: invoke test
      - name: Data Import Export
        run: |
          invoke migrate
          python3 ./InvenTree/manage.py flush --noinput
          invoke import-fixtures
          invoke export-records -f data.json
          python3 ./InvenTree/manage.py flush --noinput
          invoke import-records -f data.json
          invoke import-records -f data.json

  mysql:
    name: Tests [MySQL]
    needs: ['javascript', 'html', 'pre-commit']
    runs-on: ${{ env.runner_ref }}
    if: github.event_name == 'push'

    env:
      # Database backend configuration
      INVENTREE_DB_ENGINE: django.db.backends.mysql
      INVENTREE_DB_USER: root
      INVENTREE_DB_PASSWORD: password
      INVENTREE_DB_HOST: '127.0.0.1'
      INVENTREE_DB_PORT: 3306
      INVENTREE_DEBUG: info
      INVENTREE_PLUGINS_ENABLED: true

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: ${{ env.INVENTREE_DB_NAME }}
          MYSQL_USER: inventree
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
        ports:
          - 3306:3306

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python ${{ env.python_version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python_version }}
          cache: 'pip'
      - name: Install OS Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install gettext

          sudo apt-get install libmysqlclient-dev
      - name: Install Specific Python Dependencies
        run: |
          pip3 install mysqlclient
      - name: Install Python Dependencies
        run: |
          python3 -m pip3 install -U pip3
          pip3 install invoke
          invoke update
      - name: Run Tests
        run: invoke test
      - name: Data Import Export
        run: |
          invoke migrate
          python3 ./InvenTree/manage.py flush --noinput
          invoke import-fixtures
          invoke export-records -f data.json
          python3 ./InvenTree/manage.py flush --noinput
          invoke import-records -f data.json
          invoke import-records -f data.json
