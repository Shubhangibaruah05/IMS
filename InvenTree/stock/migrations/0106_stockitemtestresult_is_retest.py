# Generated by Django 3.2.23 on 2024-01-01 09:46

from django.db import migrations, models
from django.db.models import Q
def generate_retest_field(apps, schema_editor):
    StockItemTestResult = apps.get_model('stock', 'stockitemtestresult')

    results = StockItemTestResult.objects.all().order_by('stock_item', 'test')
    last_stock_item_pk = -1
    last_test = ""
    for result in results:
        if result.stock_item.pk == last_stock_item_pk and result.test == last_test:
            print("same as prev")
            continue
        last_stock_item_pk = result.stock_item.pk
        last_test = result.test

        (StockItemTestResult.objects
         .filter(Q(stock_item=result.stock_item) & Q(test=result.test) & ~Q(pk=result.pk))
         .update(is_retest=True))


class Migration(migrations.Migration):

    dependencies = [
        ('stock', '0105_auto_20231218_1852'),
    ]

    operations = [
        migrations.AddField(
            model_name='stockitemtestresult',
            name='is_retest',
            field=models.BooleanField(blank=True, default=False, help_text='True in the case if the same test was already performed before this test run', verbose_name='Retest'),
        ),
        migrations.RunPython(generate_retest_field)
    ]
