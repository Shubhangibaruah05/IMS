version: "3.8"

# Docker compose recipe for InvenTree
# - Runs PostgreSQL as the database backend
# - Runs Gunicorn as the InvenTree web server
# - Runs the InvenTree background worker process
# - Runs nginx as a reverse proxy

# ---------------------------------
# IMPORTANT - READ BEFORE STARTING!
# ---------------------------------
# Before running, ensure that you change the "/path/to/data" directory,
# specified in the "volumes" section at the end of this file.
# This path determines where the InvenTree data will be stored!
# 
# Prerequisites:
#db-setup:
#docker-compose up -d --no-deps inventree-db
#docker exec -it inventree-db /bin/bash -c 'while ! pg_isready -U pguser
#docker exec -it inventree-db createdb -O pguser -U pguser inventree
#docker-compose down

services:
    # Database service
    # Use PostgreSQL as the database backend
    # Note: this can be changed to a different backend,
    #       just make sure that you change the INVENTREE_DB_xxx vars below
    inventree-db:
        container_name: inventree-db
        image: postgres
        ports:
            - 5432/tcp
        environment:
            - PGDATA=/var/lib/postgresql/data/pgdb
            # The pguser and pgpassword values must be the same in the other containers
            - POSTGRES_USER=pguser
            - POSTGRES_PASSWORD=pgpassword
        volumes:
            # Map 'data' volume such that postgres database is stored externally
            - db:/var/lib/postgresql/data/
        restart: unless-stopped

    # InvenTree web server services
    # Uses gunicorn as the web server
    inventree-server:
        container_name: inventree-server
        image: inventree:local
        expose:
            - 8000
        depends_on:
            - inventree-db
        volumes:
            - ${INVENTREE_SRC_DIR:?inventree_src_dir}:/home/inventree/
            - ${INVENTREE_SRC_DIR:?inventree_src_dir}/dev:/home/inventree/data
        environment:
            # Default environment variables are configured to match the 'db' container
            # Note: If you change the database image, these will need to be adjusted
            # Note: INVENTREE_DB_HOST should match the container name of the database
            - INVENTREE_DB_USER=pguser
            - INVENTREE_DB_PASSWORD=pgpassword
            - INVENTREE_DB_ENGINE=postgresql
            - INVENTREE_DB_NAME=inventree
            - INVENTREE_DB_HOST=inventree-db
            - INVENTREE_DB_PORT=5432
            - DJANGO_SUPERUSER_USERNAME=admin
            - DJANGO_SUPERUSER_EMAIL=admin@inventree.com
            - DJANGO_SUPERUSER_PASSWORD=password
            - INVENTREE_DEV_VENV="True"
        restart: unless-stopped
        command: ["/wait-for-it.sh", "inventree-db:5432", "--", 
                    "/init-server.sh", 
                    "gunicorn",
                        "-c", "/home/inventree/docker/gunicorn.conf.py", 
                        "-b", "0.0.0.0:8000",
                        "--reload", #reboot the process when code changes occur
                        "InvenTree.wsgi"]


    # Background worker process handles long-running or periodic tasks
    inventree-worker:
        container_name: inventree-worker
        image: inventree:local
        depends_on:
            - inventree-db
            - inventree-server
        volumes:
            # Data volume must map to /home/inventree/data
            - ${INVENTREE_SRC_DIR}:/home/inventree
            - ${INVENTREE_SRC_DIR}/dev:/home/inventree/data
        environment:
            # Default environment variables are configured to match the 'db' container
            # Note: If you change the database image, these will need to be adjusted
            # Note: INVENTREE_DB_HOST should match the container name of the database
            - INVENTREE_DB_USER=pguser
            - INVENTREE_DB_PASSWORD=pgpassword
            - INVENTREE_DB_ENGINE=postgresql
            - INVENTREE_DB_NAME=inventree
            - INVENTREE_DB_HOST=inventree-db
            - INVENTREE_DB_PORT=5432
            - INVENTREE_DEV_VENV="True"
        restart: unless-stopped
        # Launch the background worker process
        command: ["/wait-for-it.sh", "inventree-server:8000", "--", 
                    "/init-worker.sh",
                    "python3",  "manage.py", "qcluster"]


    # nginx acts as a reverse proxy
    # static files are served directly by nginx
    # media files are served by nginx, although authentication is redirected to server
    # web requests are redirected to gunicorn
    # NOTE: You will need to provide a working nginx.conf file!
    proxy:
        container_name: inventree-proxy
        image: nginx
        depends_on:
            - inventree-server
        ports:
            # Change "1337" to the port that you want InvenTree web server to be available on
            - 1337:80
        volumes:
            # Provide ./nginx.conf file to the container
            # Refer to the provided example file as a starting point
            - ${INVENTREE_SRC_DIR:?inventree_src_dir}/docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
            # nginx proxy needs access to static and media files
            - ${INVENTREE_SRC_DIR:?inventree_src_dir}/dev/static:/var/www/static
            - ${INVENTREE_SRC_DIR:?inventree_src_dir}/dev/media:/var/www/media
        restart: unless-stopped

volumes:
    # NOTE: Change ${ } to the appropriate path in dev_config.env to a directory on your local machine
    # Persistent data, stored external to the container(s)
    db:
        driver: local
        driver_opts:
            type: none
            o: bind
            # This directory specified where InvenTree data are stored "outside" the docker containers
            # Change this path to a local system path where you want InvenTree data stored
            device: ${INVENTREE_DEV_DB:?inventree_dev_db}

    #Example config if creating named volumes via filesys mounts is desired. 
    #WARNING: These volumes can end up sharing names across docker-compose runs/versions.
    #         to resolve, delete the volume, and remove the owning container. 
    #         Probably not worth doing.
    #www_static:
    #    driver: local
    #    driver_opts:
    #        type: none
    #        o: bind
    #        # This directory specified where InvenTree data are stored "outside" the docker containers
    #        # Change this path to a local system path where you want InvenTree data stored
    #        device: ${INVENTREE_DEV_WWW_STATIC:?inventree_dev_www_static}
    
    #The easiest way to maintain static data is to rebuild nginx container with static data inside. 
    #OR
    #Add nginx to the server and launch it via an entrypoint script or similar
