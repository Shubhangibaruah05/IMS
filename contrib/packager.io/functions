#!/bin/bash
#
# packager.io postinstall script functions
#

function detect_docker() {
  if [ -n "$(grep docker < /proc/1/cgroup)" ]; then
    DOCKER="yes"
  else
    DOCKER="no"
  fi
}

function detect_initcmd () {
  if [ -n "$(which systemctl 2> /dev/null)" ]; then
    INIT_CMD="systemctl"
  elif [ -n "$(which initctl 2> /dev/null)" ]; then
    INIT_CMD="initctl"
  else
    function sysvinit () {
      service $2 $1
    }
    INIT_CMD="sysvinit"
  fi

  if [ "${DOCKER}" == "yes" ]; then
    INIT_CMD="initctl"
  fi
}

function create_initscripts () {
  echo "# Setting up python enviroment"
  cd ${APP_HOME}
  python3 -m venv env
  # Install invoke for later ci tasks
  pip install invoke

  echo "# Stopping nginx"
  ${INIT_CMD} stop nginx
  echo "# Setting up nginx"
  rm /etc/nginx/sites-enabled/default
  cp ${APP_HOME}/docker/production/nginx.prod.conf /etc/nginx/sites-enabled/inventree.conf
  sed -i s/inventree-server:8000/localhost:6000/g /etc/nginx/sites-enabled/inventree.conf
  sed -i s=var/www=opt/inventree/data=g /etc/nginx/sites-enabled/inventree.conf

  # Restart nginx
  echo "# Restarting nginx"
  ${INIT_CMD} start nginx

  echo "# (Re)creating init scripts"
  inventree scale web="1" worker="1"

  echo "# Enabling InvenTree on boot"
  ${INIT_CMD} enable inventree
}

function start_inventree () {
  echo "# Starting InvenTree"
  ${INIT_CMD} start inventree
}

function stop_inventree () {
  echo "# Stopping InvenTree"
  ${INIT_CMD} stop inventree
}

function update_or_install () {
    echo "# Updating InvenTree"
    cd ${APP_HOME} && invoke update
    echo "# Set permissions for data dir and media: ${DATA_DIR}"
    chown ${APP_USER}:${APP_GROUP} ${DATA_DIR} -R
}

function set_env () {
  echo "# Setting up InvenTree config values"

  inventree config:set INVENTREE_CONFIG_FILE=${INVENTREE_CONFIG_FILE}

  # Changing the config file
  echo "# Writing the settings to the config file ${INVENTREE_CONFIG_FILE}"
  # Media Root
  sed -i s=#media_root:\'/home/inventree/data/media\'=media_root:\'${INVENTREE_MEDIA_ROOT}\'=g ${INVENTREE_CONFIG_FILE}
  # Static Root
  sed -i s=#static_root:\'/home/inventree/data/static\'=static_root:\'${INVENTREE_STATIC_ROOT}\'=g ${INVENTREE_CONFIG_FILE}
  # Plugins enabled
  sed -i s=plugins_enabled: False=plugins_enabled: ${INVENTREE_PLUGINS_ENABLED}=g ${INVENTREE_CONFIG_FILE}
  # Plugin file
  sed -i s=#plugin_file:\'/path/to/plugins.txt\'=plugin_file:\'${INVENTREE_PLUGIN_FILE}\'=g ${INVENTREE_CONFIG_FILE}
  # Secret key file
  sed -i s=#secret_key_file:\'/etc/inventree/secret_key.txt\'=secret_key_file:\'${INVENTREE_SECRET_KEY_FILE}\'=g ${INVENTREE_CONFIG_FILE}
  # Database name
  sed -i s=#NAME:\'/path/to/database\'=NAME:\'${INVENTREE_DB_NAME}\'=g ${INVENTREE_CONFIG_FILE}
  # Database engine
  sed -i s=#ENGINE:sampleengine=ENGINE:${INVENTREE_DB_ENGINE}=g ${INVENTREE_CONFIG_FILE}
}


function final_message () {
  echo -e "####################################################################################"
  echo -e "\nAdd your fully qualified domain name or public IP to servername directive of"
  echo -e "nginx, if this installation is done on a remote server. You have to change:"
  echo -e "/etc/nginx/sites-available/default and restart nginx process."
  echo -e "Otherwise just open http://localhost/ in your browser to start using InvenTree.\n"
  echo -e "####################################################################################"
}
